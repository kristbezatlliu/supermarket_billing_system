/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package supermarket_billing_system;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Arrays;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class Create_receipt extends javax.swing.JFrame {    
    /**
     * Creates new form Create_receipt2
     */
    public static boolean isInteger(String s) {
        try { 
            Integer.parseInt(s); 
        } catch(NumberFormatException e) { 
            return false; 
        } catch(NullPointerException e) {
            return false;
        }
        // only got here if we didn't return false
        return true;
    }
    
    public void updateTotal(){
        DefaultTableModel table = (DefaultTableModel) receipt_list_table.getModel();
        int total=0;
        
        for (int i=0; i<table.getRowCount(); i++){
            String totaladd = (String) table.getValueAt(i, 3);
            total += Integer.parseInt(totaladd);
        }
        
        totalValueTitle.setText(Integer.toString(total));
    }
    
    public void updateList(){
        Connection con = DBConnection.connect();
        
        try{
            DefaultTableModel table = (DefaultTableModel) product_list_table.getModel();
            String sql = "select * from product_list;";
            Statement st = con.createStatement();
            
            table.setRowCount(0);
            ResultSet res = st.executeQuery(sql);

            while(res.next()){
                int ID = res.getInt("ID");
                String Name = res.getString("Name");
                String Type = res.getString("Type");
                int Price = res.getInt("Price");
                int Quantity = res.getInt("Quantity");

                Object[] newRow = {ID, Name, Type, Price, Quantity};
                table.addRow(newRow);
            }
            
            con.close();
            
        } catch (Exception a){
            System.out.println("Data not inserted, ERROR: "  + a);
        }
    }
    
    public Create_receipt() {
        initComponents();
        updateList();
        
        DefaultTableModel table = (DefaultTableModel) receipt_list_table.getModel();
        Receipt_finished receiptWindow = new Receipt_finished(this, true);
        receiptWindow.setVisible(true);
        
        table.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        add_item_button = new javax.swing.JButton();
        complete_receipt_button = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        amount_field = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        product_list_table = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        receipt_list_table = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        remove_selected_button = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        totalValueTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("Create Receipt");

        add_item_button.setText("Add Item");
        add_item_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_item_buttonActionPerformed(evt);
            }
        });

        complete_receipt_button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        complete_receipt_button.setText("Complete Receipt");
        complete_receipt_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complete_receipt_buttonActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Amount");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Receipt Details");

        product_list_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Type", "Price", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(product_list_table);
        if (product_list_table.getColumnModel().getColumnCount() > 0) {
            product_list_table.getColumnModel().getColumn(0).setResizable(false);
            product_list_table.getColumnModel().getColumn(0).setPreferredWidth(50);
            product_list_table.getColumnModel().getColumn(1).setResizable(false);
            product_list_table.getColumnModel().getColumn(1).setPreferredWidth(100);
            product_list_table.getColumnModel().getColumn(2).setResizable(false);
            product_list_table.getColumnModel().getColumn(2).setPreferredWidth(75);
            product_list_table.getColumnModel().getColumn(3).setResizable(false);
            product_list_table.getColumnModel().getColumn(3).setPreferredWidth(75);
            product_list_table.getColumnModel().getColumn(4).setResizable(false);
            product_list_table.getColumnModel().getColumn(4).setPreferredWidth(75);
        }

        receipt_list_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product", "Price", "Amount", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(receipt_list_table);
        if (receipt_list_table.getColumnModel().getColumnCount() > 0) {
            receipt_list_table.getColumnModel().getColumn(0).setResizable(false);
            receipt_list_table.getColumnModel().getColumn(1).setResizable(false);
            receipt_list_table.getColumnModel().getColumn(2).setResizable(false);
            receipt_list_table.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Current Product List");

        back.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        back.setActionCommand("Back");
        back.setLabel("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        remove_selected_button.setText("Remove Selected");
        remove_selected_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_selected_buttonActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Total:");

        totalValueTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        totalValueTitle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        totalValueTitle.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(amount_field, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(add_item_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(311, 311, 311)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(complete_receipt_button, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(remove_selected_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalValueTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(back, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10)
                    .addComponent(totalValueTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_item_button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amount_field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(remove_selected_button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(complete_receipt_button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void add_item_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_item_buttonActionPerformed
        String numVal = amount_field.getText();
        int rowNum = product_list_table.getSelectedRow();
        
        if (isInteger(numVal) && rowNum != -1){
            DefaultTableModel model = (DefaultTableModel) product_list_table.getModel();
            DefaultTableModel receipt = (DefaultTableModel) receipt_list_table.getModel();
            
            //String seletedItemName = model.getVa
            int selectedAmount = Integer.parseInt(numVal);
            int Price = (int) model.getValueAt(rowNum,3);
            int Total = Price * selectedAmount;
            
            String selectedItemName = (String) model.getValueAt(rowNum, 1);
            
            Vector<String> things = new Vector<String>();
            things.addElement(selectedItemName);
            things.addElement(Integer.toString(Price));
            things.addElement(Integer.toString(selectedAmount));
            things.addElement(Integer.toString(Total));
            
            receipt.addRow(things);
            updateTotal();
        }
    }//GEN-LAST:event_add_item_buttonActionPerformed

    private void complete_receipt_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_complete_receipt_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_complete_receipt_buttonActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        new MainMenu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void remove_selected_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove_selected_buttonActionPerformed
        int[] rowNum = receipt_list_table.getSelectedRows();
        Arrays.sort(rowNum);
        
        if (rowNum.length > 0){
            for(int i=rowNum.length-1; i>=0; i--){
                DefaultTableModel table = (DefaultTableModel) receipt_list_table.getModel();
                table.removeRow(rowNum[i]);
            }
        }
        
        updateTotal();
    }//GEN-LAST:event_remove_selected_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Create_receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Create_receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Create_receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Create_receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Create_receipt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_item_button;
    private javax.swing.JTextField amount_field;
    private javax.swing.JButton back;
    private javax.swing.JButton complete_receipt_button;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable product_list_table;
    private javax.swing.JTable receipt_list_table;
    private javax.swing.JButton remove_selected_button;
    private javax.swing.JLabel totalValueTitle;
    // End of variables declaration//GEN-END:variables
}
